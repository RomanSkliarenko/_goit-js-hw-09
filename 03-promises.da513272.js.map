{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAO,CACXC,KAAOC,SAASC,cAAc,UAE1BC,EAAO,GA4Bb,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAACH,E,MAAUC,IAEnBG,EAAO,C,SAACJ,E,MAAUC,GAAO,GAE3BA,EAAM,G,CApCZP,EAAKC,KAAKc,iBAAiB,SAE3B,SAA2BC,GACzBZ,EAAKY,EAAEC,OAAOC,OAASF,EAAEC,OAAOE,K,IAFlCnB,EAAKC,KAAKc,iBAAiB,UAI3B,SAA2BC,GACzBA,EAAEI,iBACF,IAAK,IAAIC,EAAI,EAAGA,EAAIjB,EAAKkB,SAAUD,EAC1B,IAAJA,EACDhB,EAAcgB,EAAE,EAAGjB,EAAKG,OACrBgB,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,MACjBiB,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAqBpB,QAAiBC,MAAU,IAEzEoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBiB,EAAA1B,GAAS2B,OAAOG,QAAQ,sBAAoBtB,QAAiBC,MAAU,IAG3EF,EAAcgB,EAAE,EAAGjB,EAAKG,MAASH,EAAKyB,KAAOR,GAC1CE,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,MACjBiB,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAqBpB,QAAiBC,MAAU,IAEzEoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBiB,EAAA1B,GAAS2B,OAAOG,QAAQ,sBAAoBtB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst refs = {\n  'form':document.querySelector('.form'),\n}\nconst args = {}\nrefs.form.addEventListener('input', formChangeHandler)\nrefs.form.addEventListener('submit', formSubmitHandler)\nfunction formChangeHandler(e) {\n  args[e.target.name] = +e.target.value\n}\nfunction formSubmitHandler(e) {\n  e.preventDefault()\n  for (let i = 0; i < args.amount; ++i) {\n    if(i===0){\n      createPromise(i+1, args.delay )\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    } else {\n      createPromise(i+1, args.delay + (args.step * i))\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n  }\n}\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject)=>{\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(()=>{\n      if (shouldResolve) {\n        resolve({position, delay})\n      } else {\n        reject({position, delay})\n      }\n    },delay)\n  })\n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","$47d4ff9957288465$var$args","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","target","name","value","preventDefault","i","amount","then","$parcel$interopDefault","Notify","success","catch","failure","step"],"version":3,"file":"03-promises.da513272.js.map"}